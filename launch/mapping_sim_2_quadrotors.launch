<?xml version="1.0"?>

<launch>


  <arg name="two_quadrotors" value="true"/>

  <!-- (Re)Load Parameters -->
  <rosparam command="load" file="$(find ogm_ae)/config/robots.yaml"      />
  <rosparam command="load" file="$(find ogm_ae)/config/maps_gazebo.yaml" />
  <rosparam command="load" file="$(find ogm_ae)/config/exploration.yaml" />
  <rosparam command="load" file="$(find ogm_ae)/config/sensors.yaml"     />


  <!-- PCL Manager (Voxel Grid) -->
   <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Quadrotor 0 Sensor Data Conversion -->
  <group>
    <!-- Hokuyo Laser Scan Convert to Hokuyo Point Cloud -->
    <include file="$(find ogm_ae)/launch/lsr_to_pcl.launch" >
      <arg name="lsr_name_in"  value="quadrotor0/scan"          />
      <arg name="lsr_name_out" value="quadrotor0/lsr_pcl_local" />
    </include>

    <!-- Hokuyo Point Cloud to World Frame -->
    <include file="$(find ogm_ae)/launch/pcl_change_frame.launch" >
      <arg name="pcl_name_in"  value="/quadrotor0/lsr_pcl_local" />
      <arg name="pcl_name_out" value="/quadrotor0/depth_lsr"     />
      <arg name="frame_out"    value="/world"                    />
    </include>

    <!-- Xtion Point Cloud to World Frame -->
    <include file="$(find ogm_ae)/launch/pcl_change_frame.launch" >
      <arg name="pcl_name_in"  value="/quadrotor0/camera/depth/points"  />
      <arg name="pcl_name_out" value="/quadrotor0/depth_pcl_unfiltered" />
      <arg name="frame_out"    value="/world"                           />
    </include>

    <!-- Xtion Point Cloud Filtered with Voxel Grid -->
    <include file="$(find ogm_ae)/launch/filter_pcl_voxel_grid.launch" >
      <arg name="node_name"            value="quadrotor0_xtion_voxel_grid"      />
      <arg name="depth_pcl_unfiltered" value="/quadrotor0/depth_pcl_unfiltered" />
      <arg name="depth_pcl_filtered"   value="/quadrotor0/depth_pcl_filtered"   />
    </include>
  </group>

  <!-- Quadrotor 1 Sensor Data Conversion -->
  <group if="$(arg two_quadrotors)" >
    <!-- Hokuyo Laser Scan Convert to Hokuyo Point Cloud -->
    <include file="$(find ogm_ae)/launch/lsr_to_pcl.launch" >
      <arg name="lsr_name_in"  value="quadrotor1/scan"          />
      <arg name="lsr_name_out" value="quadrotor1/lsr_pcl_local" />
    </include>

    <!-- Hokuyo Point Cloud to World Frame -->
    <include file="$(find ogm_ae)/launch/pcl_change_frame.launch" >
      <arg name="pcl_name_in"  value="/quadrotor1/lsr_pcl_local" />
      <arg name="pcl_name_out" value="/quadrotor1/depth_lsr"     />
      <arg name="frame_out"    value="/world"                    />
    </include>

    <!-- Xtion Point Cloud to World Frame -->
    <include file="$(find ogm_ae)/launch/pcl_change_frame.launch" >
      <arg name="pcl_name_in"  value="/quadrotor1/camera/depth/points"  />
      <arg name="pcl_name_out" value="/quadrotor1/depth_pcl_unfiltered" />
      <arg name="frame_out"    value="/world"                           />
    </include>

    <!-- Xtion Point Cloud Filtered with Voxel Grid -->
    <include file="$(find ogm_ae)/launch/filter_pcl_voxel_grid.launch" >
      <arg name="node_name"            value="quadrotor1_xtion_voxel_grid"      />
      <arg name="depth_pcl_unfiltered" value="/quadrotor1/depth_pcl_unfiltered" />
      <arg name="depth_pcl_filtered"   value="/quadrotor1/depth_pcl_filtered"   />
    </include>
  </group>

  <!-- Mapping -->
  <node pkg="ogm_ae" name="probabilistic_occupancy_grid_mapping" type="probabilistic_occupancy_grid_mapping" output="screen" ></node>


  <!-- Visualization -->
  <node pkg="ogm_ae" name="generate_3D_rviz_msgs" type="generate_3D_rviz_msgs" output="screen" />


  <!-- Initial Yaw Rototation -->
  <param name="do_yaw_rotation" type="bool" value="true" />


</launch>
